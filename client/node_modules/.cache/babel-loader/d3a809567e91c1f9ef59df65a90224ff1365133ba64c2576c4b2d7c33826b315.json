{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { saveSearchQuery, fetchRecentSearches } from \"../utils/searchHandler\";\nconst useDirections = (setMarkers, allMarkers, type, setRecentSearches, setStepMarkers, setDirectionsParsed) => {\n  _s();\n  const [directionsRaw, setDirectionsRaw] = useState(null);\n  const [stepMarkers, internalSetStepMarkers] = useState([]);\n  const [hoveredStep, setHoveredStep] = useState(null);\n  const clearDirections = (restoreMarkers = () => {}) => {\n    setDirectionsRaw(null);\n    setDirectionsParsed(null);\n    internalSetStepMarkers([]);\n    setHoveredStep(null);\n    restoreMarkers();\n  };\n  const getDirections = async (origin, destination) => {\n    try {\n      const originCoords = await geocodeLocation(origin);\n      const destinationCoords = await geocodeLocation(destination);\n      const directionsService = new window.google.maps.DirectionsService();\n      return new Promise((resolve, reject) => {\n        directionsService.route({\n          origin: originCoords,\n          destination: destinationCoords,\n          travelMode: window.google.maps.TravelMode.DRIVING\n        }, (result, status) => {\n          if (status === \"OK\") {\n            const parsed = {\n              legs: result.routes[0].legs.map(leg => ({\n                startAddress: leg.start_address,\n                endAddress: leg.end_address,\n                distance: leg.distance.text,\n                duration: leg.duration.text,\n                steps: leg.steps.map(step => step.instructions.replace(/<[^>]*>/g, \"\"))\n              }))\n            };\n            const steps = result.routes[0].legs[0].steps.map(step => ({\n              lat: step.start_location.lat(),\n              lng: step.start_location.lng()\n            }));\n            resolve({\n              raw: result,\n              parsed,\n              steps\n            });\n          } else {\n            console.error(\"❌ Routing failed:\", status);\n            reject(status);\n          }\n        });\n      });\n    } catch (err) {\n      console.error(\"❌ Error in getDirections:\", err);\n      return null;\n    }\n  };\n  return {\n    directionsRaw,\n    setDirectionsRaw,\n    setDirectionsParsed,\n    stepMarkers,\n    setStepMarkers: internalSetStepMarkers,\n    hoveredStep,\n    setHoveredStep,\n    clearDirections,\n    getDirections\n  };\n};\n_s(useDirections, \"Bo0vlZ8qw06fqlGTpREaTJYNjyE=\");\nexport default useDirections;","map":{"version":3,"names":["useState","axios","saveSearchQuery","fetchRecentSearches","useDirections","setMarkers","allMarkers","type","setRecentSearches","setStepMarkers","setDirectionsParsed","_s","directionsRaw","setDirectionsRaw","stepMarkers","internalSetStepMarkers","hoveredStep","setHoveredStep","clearDirections","restoreMarkers","getDirections","origin","destination","originCoords","geocodeLocation","destinationCoords","directionsService","window","google","maps","DirectionsService","Promise","resolve","reject","route","travelMode","TravelMode","DRIVING","result","status","parsed","legs","routes","map","leg","startAddress","start_address","endAddress","end_address","distance","text","duration","steps","step","instructions","replace","lat","start_location","lng","raw","console","error","err"],"sources":["/home/eashr/pet-resources-app/client/src/hooks/useDirections.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\nimport { saveSearchQuery, fetchRecentSearches } from \"../utils/searchHandler\";\n\nconst useDirections = (\n  setMarkers,\n  allMarkers,\n  type,\n  setRecentSearches,\n  setStepMarkers,\n  setDirectionsParsed\n) => {\n  const [directionsRaw, setDirectionsRaw] = useState(null);\n  const [stepMarkers, internalSetStepMarkers] = useState([]);\n  const [hoveredStep, setHoveredStep] = useState(null);\n\n  const clearDirections = (restoreMarkers = () => {}) => {\n    setDirectionsRaw(null);\n    setDirectionsParsed(null);\n    internalSetStepMarkers([]);\n    setHoveredStep(null);\n    restoreMarkers();\n  };\n\n  const getDirections = async (origin, destination) => {\n    try {\n      const originCoords = await geocodeLocation(origin);\n      const destinationCoords = await geocodeLocation(destination);\n      const directionsService = new window.google.maps.DirectionsService();\n  \n      return new Promise((resolve, reject) => {\n        directionsService.route(\n          {\n            origin: originCoords,\n            destination: destinationCoords,\n            travelMode: window.google.maps.TravelMode.DRIVING,\n          },\n          (result, status) => {\n            if (status === \"OK\") {\n              const parsed = {\n                legs: result.routes[0].legs.map((leg) => ({\n                  startAddress: leg.start_address,\n                  endAddress: leg.end_address,\n                  distance: leg.distance.text,\n                  duration: leg.duration.text,\n                  steps: leg.steps.map((step) =>\n                    step.instructions.replace(/<[^>]*>/g, \"\")\n                  ),\n                })),\n              };\n  \n              const steps = result.routes[0].legs[0].steps.map((step) => ({\n                lat: step.start_location.lat(),\n                lng: step.start_location.lng(),\n              }));\n  \n              resolve({ raw: result, parsed, steps });\n            } else {\n              console.error(\"❌ Routing failed:\", status);\n              reject(status);\n            }\n          }\n        );\n      });\n    } catch (err) {\n      console.error(\"❌ Error in getDirections:\", err);\n      return null;\n    }\n  };\n  \n\n  return {\n    directionsRaw,\n    setDirectionsRaw,\n    setDirectionsParsed,\n    stepMarkers,\n    setStepMarkers: internalSetStepMarkers,\n    hoveredStep,\n    setHoveredStep,\n    clearDirections,\n    getDirections,\n  };\n};\n\nexport default useDirections;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
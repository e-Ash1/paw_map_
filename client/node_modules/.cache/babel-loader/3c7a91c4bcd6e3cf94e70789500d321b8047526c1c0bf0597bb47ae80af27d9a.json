{"ast":null,"code":"import { deleteRecentSearchById, fetchRecentSearches, saveSearchQuery } from \"../utils/searchHandler\";\nconst useSearch = (setMarkers, setAllMarkers, type, setLastSearch, setRecentSearches) => {\n  const fetchPlaces = async (location, selectedType = type) => {\n    try {\n      const res = await fetch(`/api/places?location=${location.lat},${location.lng}&type=${selectedType}&radius=5000`);\n      const data = await res.json();\n      setMarkers(data.results || []);\n      setAllMarkers(data.results || []);\n      setRecentSearches(await fetchRecentSearches());\n    } catch (error) {\n      console.error(\"❌ Error fetching places:\", error);\n    }\n  };\n  const handleRefetchSearch = async (searchType, location) => {\n    await fetchPlaces({\n      lat: location.coords.lat,\n      lng: location.coords.lng\n    }, searchType);\n  };\n  const handlePlaceChanged = (searchBox, selectedType, setLastSearch) => {\n    if (!searchBox) return;\n    const place = searchBox.getPlace();\n    if (!place || !place.geometry || !place.geometry.location) return;\n    const location = {\n      lat: place.geometry.location.lat(),\n      lng: place.geometry.location.lng()\n    };\n    setLastSearch(place.formatted_address);\n    localStorage.setItem(\"lastSearch\", place.formatted_address);\n    fetchPlaces(location, selectedType);\n  };\n  const deleteRecentSearch = async id => {\n    try {\n      await deleteRecentSearchById(id);\n      const updated = await fetchRecentSearches();\n      setRecentSearches(updated);\n    } catch (err) {\n      console.error(\"❌ Error deleting recent search:\", err);\n    }\n  };\n  const refreshRecentSearches = async () => {\n    try {\n      const updated = await fetchRecentSearches();\n      setRecentSearches(updated);\n    } catch (err) {\n      console.error(\"❌ Failed to refresh recent searches:\", err);\n    }\n  };\n  return {\n    fetchPlaces,\n    handleRefetchSearch,\n    handlePlaceChanged,\n    deleteRecentSearch,\n    refreshRecentSearches\n  };\n};\nexport default useSearch;","map":{"version":3,"names":["deleteRecentSearchById","fetchRecentSearches","saveSearchQuery","useSearch","setMarkers","setAllMarkers","type","setLastSearch","setRecentSearches","fetchPlaces","location","selectedType","res","fetch","lat","lng","data","json","results","error","console","handleRefetchSearch","searchType","coords","handlePlaceChanged","searchBox","place","getPlace","geometry","formatted_address","localStorage","setItem","deleteRecentSearch","id","updated","err","refreshRecentSearches"],"sources":["/home/eashr/pet-resources-app/client/src/hooks/useSearch.jsx"],"sourcesContent":["import {\n  deleteRecentSearchById,\n  fetchRecentSearches,\n  saveSearchQuery,\n} from \"../utils/searchHandler\";\n\nconst useSearch = (\n  setMarkers,\n  setAllMarkers,\n  type,\n  setLastSearch,\n  setRecentSearches\n) => {\n  const fetchPlaces = async (location, selectedType = type) => {\n    try {\n      const res = await fetch(\n        `/api/places?location=${location.lat},${location.lng}&type=${selectedType}&radius=5000`\n      );\n      const data = await res.json();\n      setMarkers(data.results || []);\n      setAllMarkers(data.results || []);\n      setRecentSearches(await fetchRecentSearches());\n    } catch (error) {\n      console.error(\"❌ Error fetching places:\", error);\n    }\n  };\n\n  const handleRefetchSearch = async (searchType, location) => {\n    await fetchPlaces({ lat: location.coords.lat, lng: location.coords.lng }, searchType);\n  };\n\n  const handlePlaceChanged = (searchBox, selectedType, setLastSearch) => {\n    if (!searchBox) return;\n    const place = searchBox.getPlace();\n    if (!place || !place.geometry || !place.geometry.location) return;\n\n    const location = {\n      lat: place.geometry.location.lat(),\n      lng: place.geometry.location.lng(),\n    };\n\n    setLastSearch(place.formatted_address);\n    localStorage.setItem(\"lastSearch\", place.formatted_address);\n    fetchPlaces(location, selectedType);\n  };\n\n  const deleteRecentSearch = async (id) => {\n    try {\n      await deleteRecentSearchById(id);\n      const updated = await fetchRecentSearches();\n      setRecentSearches(updated);\n    } catch (err) {\n      console.error(\"❌ Error deleting recent search:\", err);\n    }\n  };\n\n  const refreshRecentSearches = async () => {\n    try {\n      const updated = await fetchRecentSearches();\n      setRecentSearches(updated);\n    } catch (err) {\n      console.error(\"❌ Failed to refresh recent searches:\", err);\n    }\n  };\n\n  return {\n    fetchPlaces,\n    handleRefetchSearch,\n    handlePlaceChanged,\n    deleteRecentSearch,\n    refreshRecentSearches,\n  };\n};\n\nexport default useSearch;\n"],"mappings":"AAAA,SACEA,sBAAsB,EACtBC,mBAAmB,EACnBC,eAAe,QACV,wBAAwB;AAE/B,MAAMC,SAAS,GAAGA,CAChBC,UAAU,EACVC,aAAa,EACbC,IAAI,EACJC,aAAa,EACbC,iBAAiB,KACd;EACH,MAAMC,WAAW,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,YAAY,GAAGL,IAAI,KAAK;IAC3D,IAAI;MACF,MAAMM,GAAG,GAAG,MAAMC,KAAK,CACrB,wBAAwBH,QAAQ,CAACI,GAAG,IAAIJ,QAAQ,CAACK,GAAG,SAASJ,YAAY,cAC3E,CAAC;MACD,MAAMK,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;MAC7Bb,UAAU,CAACY,IAAI,CAACE,OAAO,IAAI,EAAE,CAAC;MAC9Bb,aAAa,CAACW,IAAI,CAACE,OAAO,IAAI,EAAE,CAAC;MACjCV,iBAAiB,CAAC,MAAMP,mBAAmB,CAAC,CAAC,CAAC;IAChD,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,MAAME,mBAAmB,GAAG,MAAAA,CAAOC,UAAU,EAAEZ,QAAQ,KAAK;IAC1D,MAAMD,WAAW,CAAC;MAAEK,GAAG,EAAEJ,QAAQ,CAACa,MAAM,CAACT,GAAG;MAAEC,GAAG,EAAEL,QAAQ,CAACa,MAAM,CAACR;IAAI,CAAC,EAAEO,UAAU,CAAC;EACvF,CAAC;EAED,MAAME,kBAAkB,GAAGA,CAACC,SAAS,EAAEd,YAAY,EAAEJ,aAAa,KAAK;IACrE,IAAI,CAACkB,SAAS,EAAE;IAChB,MAAMC,KAAK,GAAGD,SAAS,CAACE,QAAQ,CAAC,CAAC;IAClC,IAAI,CAACD,KAAK,IAAI,CAACA,KAAK,CAACE,QAAQ,IAAI,CAACF,KAAK,CAACE,QAAQ,CAAClB,QAAQ,EAAE;IAE3D,MAAMA,QAAQ,GAAG;MACfI,GAAG,EAAEY,KAAK,CAACE,QAAQ,CAAClB,QAAQ,CAACI,GAAG,CAAC,CAAC;MAClCC,GAAG,EAAEW,KAAK,CAACE,QAAQ,CAAClB,QAAQ,CAACK,GAAG,CAAC;IACnC,CAAC;IAEDR,aAAa,CAACmB,KAAK,CAACG,iBAAiB,CAAC;IACtCC,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEL,KAAK,CAACG,iBAAiB,CAAC;IAC3DpB,WAAW,CAACC,QAAQ,EAAEC,YAAY,CAAC;EACrC,CAAC;EAED,MAAMqB,kBAAkB,GAAG,MAAOC,EAAE,IAAK;IACvC,IAAI;MACF,MAAMjC,sBAAsB,CAACiC,EAAE,CAAC;MAChC,MAAMC,OAAO,GAAG,MAAMjC,mBAAmB,CAAC,CAAC;MAC3CO,iBAAiB,CAAC0B,OAAO,CAAC;IAC5B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZf,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEgB,GAAG,CAAC;IACvD;EACF,CAAC;EAED,MAAMC,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACxC,IAAI;MACF,MAAMF,OAAO,GAAG,MAAMjC,mBAAmB,CAAC,CAAC;MAC3CO,iBAAiB,CAAC0B,OAAO,CAAC;IAC5B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZf,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEgB,GAAG,CAAC;IAC5D;EACF,CAAC;EAED,OAAO;IACL1B,WAAW;IACXY,mBAAmB;IACnBG,kBAAkB;IAClBQ,kBAAkB;IAClBI;EACF,CAAC;AACH,CAAC;AAED,eAAejC,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
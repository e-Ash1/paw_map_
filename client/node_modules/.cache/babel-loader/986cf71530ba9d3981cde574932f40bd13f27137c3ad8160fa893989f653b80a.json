{"ast":null,"code":"// utils/userSession.js - Manage Temporary User ID\nexport const getUserId = () => {\n  let userId = localStorage.getItem(\"tempUserId\");\n  if (!userId) {\n    userId = crypto.randomUUID(); // ✅ Generate a unique ID\n    localStorage.setItem(\"tempUserId\", userId);\n  }\n  return userId;\n};\n\n// Explanation:\n// 1. **Checks if the user has a temp ID stored in localStorage.**\n// 2. **If not, generates a new UUID and stores it.**\n// 3. **Ensures each user session has a unique identifier.**","map":{"version":3,"names":["getUserId","userId","localStorage","getItem","crypto","randomUUID","setItem"],"sources":["/home/eashr/pet-resources-app/client/src/utils/userSession.js"],"sourcesContent":["// utils/userSession.js - Manage Temporary User ID\nexport const getUserId = () => {\n    let userId = localStorage.getItem(\"tempUserId\");\n    if (!userId) {\n      userId = crypto.randomUUID();// ✅ Generate a unique ID\n      localStorage.setItem(\"tempUserId\", userId);\n    }\n    return userId;\n};\n\n  \n  // Explanation:\n  // 1. **Checks if the user has a temp ID stored in localStorage.**\n  // 2. **If not, generates a new UUID and stores it.**\n  // 3. **Ensures each user session has a unique identifier.**"],"mappings":"AAAA;AACA,OAAO,MAAMA,SAAS,GAAGA,CAAA,KAAM;EAC3B,IAAIC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;EAC/C,IAAI,CAACF,MAAM,EAAE;IACXA,MAAM,GAAGG,MAAM,CAACC,UAAU,CAAC,CAAC,CAAC;IAC7BH,YAAY,CAACI,OAAO,CAAC,YAAY,EAAEL,MAAM,CAAC;EAC5C;EACA,OAAOA,MAAM;AACjB,CAAC;;AAGC;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}